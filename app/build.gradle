plugins {
    alias(libs.plugins.android.application)
}

//引入上层目录的common.gradle文件内容
apply from: '../common.gradle'

android {
    namespace 'com.example.cloud_music_java_self'


    // BuildConfig
    buildFeatures {
        buildConfig true
    }


    defaultConfig {
        applicationId "com.example.cloud_music_java_self"

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //渠道相关
        flavorDimensions "versionCode"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    viewBinding {
        //开启视图绑定，用来替代findViewById
        //官方文档：https://developer.android.com/topic/libraries/view-binding
        enabled = true
    }

    //配置不同的环境
    productFlavors {
        //本地开发环境
        local {
            //API端点
            buildConfigField('String', "ENDPOINT", '"http://192.168.50.139:8080/"')

            //资源端点
            buildConfigField 'String', 'RESOURCE_ENDPOINT', '"http://course-music-dev.ixuea.com/%s"'

            dimension = minSdkVersion
        }

        //开发环境
        dev {
            //API端点
            buildConfigField('String', "ENDPOINT", '"http://my-cloud-music-api-sp3-dev.ixuea.com/"')

            //资源端点
            buildConfigField 'String', 'RESOURCE_ENDPOINT', '"http://course-music-dev.ixuea.com/%s"'

            dimension = minSdkVersion
        }

        //正式环境
        prod {
            //API端点
            buildConfigField 'String', 'ENDPOINT', '"http://my-cloud-music-api-sp3.ixuea.com/"'

            //资源端点
            buildConfigField 'String', 'RESOURCE_ENDPOINT', '"http://course-music.ixuea.com/%s"'

            dimension = minSdkVersion
        }
    }

}

dependencies {

    //官方兼容组件，像AppCompatActivity就是该依赖里面的
    implementation 'androidx.appcompat:appcompat:1.4.1'

    //Material Design组件，像FloatingActionButton就是该依赖里面的
    implementation 'com.google.android.material:material:1.4.0'

    //官方提供的约束布局，像ConstraintLayout就是该依赖里面的
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'

    //UI框架，主要是用他的工具类，也可以单独拷贝出来
    //https://qmuiteam.com/android/get-started
    implementation 'com.qmuiteam:qmui:2.0.1'


    //动态处理权限
    //https://github.com/permissions-dispatcher/PermissionsDispatcher
    implementation "com.github.permissions-dispatcher:permissionsdispatcher:4.8.0"
    annotationProcessor "com.github.permissions-dispatcher:permissionsdispatcher-processor:4.8.0"

    //腾讯开源的高性能keyValue存储，用来替代系统的SharedPreferences
    //https://github.com/Tencent/MMKV
    implementation 'com.tencent:mmkv-static:+'

    //圆形指示器
    //https://github.com/ongakuer/CircleIndicator
    implementation 'me.relex:circleindicator:2.1.6'

    
    // 引入其他 module
    implementation project(':super-j')


    //region 请求网络相关
    //提示：region这种语法是最新的，推荐使用这种，也更容易阅读，不建议在同一个文件同时使用
    //因为可能会显示出错
    //okhttp
    //https://github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

    //用来打印okhttp请求日志
    //当然也可以自定义
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.3")

    //retrofit
    //https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //使用gson解析json
    //https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.9.0'

    //适配retrofit使用gson解析
    //版本要和retrofit一样
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //适配retrofit支持rxjava
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    //使用了Android响应式编程
    //RxJava和RxAndroid区别？
    //简单来说：就是RxAndroid在RxJava的基础上
    //优化了一些功能
    //增强了Android特有的功能
    //https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //endregion


    //apache common lang3工具包
    //提供了StringUtils等这样的类
    //http://commons.apache.org/proper/commons-lang/
    implementation 'org.apache.commons:commons-lang3:+'


    //通过OkHttp的拦截器机制
    //实现在应用通知栏显示网络请求功能
    //https://github.com/ChuckerTeam/chucker
    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.5.2"


    //类似TabLayout的控件
    //https://github.com/H07000223/FlycoTabLayout
    implementation 'io.github.h07000223:flycoTabLayout:3.0.0'


    //封装了RecyclerView
    //提供更高层次的接口
    //https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    implementation "io.github.cymchad:BaseRecyclerViewAdapterHelper:3.0.14"
//    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:+'
//    implementation "io.github.cymchad:BaseRecyclerViewAdapterHelper4:4.1.4"

    //自动释放RxJava相关资源
    //https://github.com/uber/AutoDispose
    implementation "com.uber.autodispose2:autodispose-androidx-lifecycle:2.1.1"



    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}